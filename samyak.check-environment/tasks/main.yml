---
# tasks file for samyak.check-environment

      - name: Check and get the login user of the developer macos
        command: defaults read /Library/Preferences/com.apple.loginwindow lastUserName
        state: latest
        register: LOGIN_USER
      - debug: msg={{ LOGIN_USER.stdout }}

      - name: Mount the samba volume to copy all the files to the local desktop
        shell: osascript -e 'mount volume "smb://metmm005/samba"'
        register: mount_status
        become: yes
      - debug: msg={{ mount_status.stdout }}

      - name: Ensuring the Mac OS version is compatible or not to proceed with the devSetup or MacMini Setup
        command: sw_vers -productVersion
        register: os_version

      - debug: msg={{ os_version.stdout }}

#      - block:

#          - name: Exit or end the playbook as the OS Version is not as expected
#            shell: echo "Exit or end the playbook as the OS Version is not as expected"
            
#          - name: Exit or end the playbook as the OS Version is not as expected
#            meta: end_play

#        when: ( os_version.stdout != "10.13.1" )

      - name: VNC Control Screen Viewer Configuration
        command: '{{ item }}'
        with_items:
          - /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -verbose -deactivate
          - /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -verbose -activate -restart -agent -allowAccessFor -allUsers -privs -all -clientopts -setvnclegacy -vnclegacy yes
        become: yes

      - name: Bringing down the volume to minimum from the default value
        command: osascript -e "set Volume 2"
        become: yes

      - name: Check current Wi-Fi Status
        command: '{{ item }}'
        with_items:
           - networksetup -getairportpower en1
           - networksetup -getairportpower en0
        register: WiFi_STATUS
        ignore_errors: true
        
      - debug: msg={{ WiFi_STATUS.stdout }}

      - name: Switch WiFi OFF if it is found ON and Switching to Location - Automatic
        command: "{{ item }}"
        with_items:
          - networksetup -setairportpower en1 off
          - networksetup -setairportpower en0 off
        ignore_errors: true
        when: WiFi_STATUS.stdout.find('On')

      - name: Check to see if there is an Ethernet adapter and set proxy settings
        command: /Users/{{ LOGIN_USER.stdout }}/Desktop/Dev_Setup_Scripts/check_ethernet_connection.ps1
        register: ethernet_status

      - debug: msg={{ ethernet_status.stdout }}

      - block:
          - name: Exit the script as it is not connected to Ethernet cable as expected
            shell: echo "Exit the script as it is not connected to Ethernet cable as expected"
          - meta: end_play
        when: ethernet_status.stdout.find("")
